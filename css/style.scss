@font-face {
    font-family: 'Aleo';
    src: url('/assets/fonts/aleo-regular-webfont.woff');
}

$brand-primary: #db1d0f;

$font-family-serif: 
    Aleo, Georgia, "Times New Roman", Times, serif;
$font-family-sans-serif: 
    "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; 
$font-family-base: Cardo, $font-family-serif;

@import '../bower_components/bootstrap/scss/bootstrap.scss';

// Light text on a dark background.
@mixin light-text() {
    color: #fff;
    &:hover {
        color: $gray-lighter;
    } 
}
// Class for when it doesn't make sense to use the mixin.
.light-text {
    @include light-text();
}

// Ensure that the element with class $content-class will always
// have aspect ratio $width : $height.
@mixin fixed-aspect-ratio($content-class, $width, $height) {
    position: relative;
    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }
    .#{$content-class} {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        height: 100%;
    }
}

html, body {
    // I'm not sure why this is required, but without it, I get an empty
    // space on the right of the page when the viewport is < 600px.
    overflow-x: hidden;
}

header {
    background-color: $brand-primary;

    .site-title {
        text-align: center;
        padding-top: 40px;
        padding-bottom: 40px;
        margin: 0;
        font-weight: normal;

        a {
            @include light-text();
            font-family: $font-family-serif;
            text-decoration: none;
        }
    }

    .site-subtitle {
        font-family: $font-family-sans-serif;
        color: #fff;
        text-align: center;
        margin: 0;
        padding-bottom: 60px;
    }

    /* The padding on the .skyline-inner element is critical:
     * https://www.smashingmagazine.com/2013/07/simple-responsive-images-with-css-background-images/
     */
    .skyline {
        width: 100%;
        background-size: 100%;
        background-image: url(/assets/images/skyline/600x158.png);
        background-repeat: no-repeat;
    }

    .skyline-inner {
        height: 0;
        padding-top: percentage(158/600);
    }
}

// Used as the gutter for the navbar and text content on mobile.
$mobile-padding-outer: 5%;

nav {
    background-color: $gray-lighter;
    text-transform: uppercase;
    font-family: $font-family-sans-serif;
    padding: 10px 0;
    a:hover {
        text-decoration: none;
    }
    .nav-item {
        display: inline;
        padding-left: 20px;
        &:first-child {
            padding-left: 0;
        }
    }
    // Styles that control the horizontal position of nav links should be placed on this class.
    .nav-items {
        margin-top: 0;
        margin-bottom: 0;
        padding-left: $mobile-padding-outer;
    }
}

main {
    // Space between the navbar and the articles / Twitter feed beneath.
    padding-top: 50px;
}

article {
    // Provides space between successive articles.
    padding-bottom: 50px;

    .title {
        color: $brand-primary;
        font-size: 2em;
    }
    // Left and right gutters are placed on the paragraph and caption elements,
    // rather than the article tag, so that images expand to fill the full 
    // width of the screen on mobile.
    // These selectors should be kept in sync with the declaration below which
    // removes this padding for tablets and larger screens.
    .title, p, figcaption {
        padding-left: $mobile-padding-outer;
        padding-right: $mobile-padding-outer;
    }
    figure {
        padding-bottom: 20px;
    }
    figcaption {
        color: $gray-light;
        font-family: $font-family-sans-serif;
        font-size: 0.8em;
        padding-top: 5px;
    }
    img {
        width: 100%;
        @include center-block();
    }
    .youtube-container {
        @include fixed-aspect-ratio('youtube-video', 560, 315);        
    }
}

// Twitter feed is only shown on desktop.
.twitter-container {
    display: none;    
    height: 0;
    width: 0;
}

footer {
    background-color: $brand-primary;
    text-align: center;
    color: #fff;
    padding-top: 80px;
    padding-bottom: 80px;

    .contact-me {
        padding-bottom: 30px;
    }

    .contact-link {
        @include light-text();
        font-size: 3em;
        padding-left: 30px;
        &:first-child {
            padding-left: 0;
        }
    }
}

$article-width: 600px;

// Tablets and up
@include media-breakpoint-up(md) {
    header {
        .skyline {
            background-image: url(/assets/images/skyline/1200x316.png)
        }

        .skyline-inner {
            padding-top: percentage(316/1200);
        }
    }

    nav {
        .nav-items {
            width: $article-width;
            margin: 0 auto;
            padding-left: 0; // reset from $mobile-padding-outer
        } 
    }

    .content { 
        width: $article-width;
        margin: 0 auto;
        article {
            // Reset the horizontal padding used for mobile devices.
            // This should be kept in sync with the selectors used for mobile
            // devices. 
            .title, p, figcaption {
                padding-left: 0;
                padding-right: 0;
            }
        }
    }
}

// Desktop and up
@include media-breakpoint-up(lg) {
    header {
        .skyline {
            background-image: url(/assets/images/skyline/1920x279.png)
        }

        .skyline-inner {
            padding-top: percentage(279/1920);
        }

        .site-title {
            font-size: 3.5em;
        }

        .site-title, .site-subtitle {
            padding: 0 0 30px 0;
        }
    }

    nav {
        .nav-item {
            padding-left: 30px;
            display: inline;
            &:first-child {
                padding-left: 0;
            }
        }

        .nav-items {
            width: map-get($grid-breakpoints, 'lg');    
            margin: 0 auto;
            padding-left: 0; // reset from $mobile-padding-outer
        } 
           
        .fa-external-link {
            padding-left: 5px;
        }
    }

    .content { 
        width: $article-width;
        display: inline-block;
        vertical-align: top;
    }
    main {
        width: map-get($grid-breakpoints, 'lg');    
        margin: 0 auto;
    }

    // The width of the Twitter timeline widget.
    $twitter-width: 300px; 
    
    // Padding between the article and the Twitter timeline widget.
    // Not sure why the extra 7px is necessary, but without it, the Twitter timeline gets
    // bumped to the very bottom of the page.
    $twitter-padding: map-get($grid-breakpoints, 'lg') - $article-width - $twitter-width - 7px;

    // Show a Twitter timeline on the right-hand side of the page on medium
    // screens and larger.
    .twitter-container {
        padding-left: $twitter-padding;
        display: inline-block;
        vertical-align: top;
        height: 600px;
        width: $twitter-width + $twitter-padding;
    }
}


